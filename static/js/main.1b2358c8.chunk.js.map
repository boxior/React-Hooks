{"version":3,"sources":["utils/variables.js","themes/index.js","containers/Daily/Loadable.js","containers/Weekly/Loadable.js","requests/index.js","components/Header/Search/FancyTextField/index.js","components/Header/Search/index.js","components/Header/SwitchForecast/index.js","components/Header/index.js","App/actions.js","App/constants.js","App/reducer.js","App/index.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","routesMap","forecastMap","daily","weekly","createMuiTheme","typography","useNextVariants","Loadable","loader","Promise","all","e","then","bind","loading","apiKey","getDaily","city","axios","get","concat","getWeekly","forwardRef","props","ref","values","handleChange","handleBlur","errors","touched","getHelperText","inputRef","useRef","useImperativeHandle","focus","current","ReactDOM","findDOMNode","getElementsByTagName","react_default","a","createElement","TextField_TextField_default","name","id","variant","value","onChange","onBlur","label","error","helperText","SearchWrap","styled","div","_templateObject","SearchForm","form","_templateObject2","SearchView","context","useContext","AppContext","isSubmitting","handleSubmit","resetForm","setSubmitting","setFieldError","location","render","cities","isSendingGetDaily","isSendingGetWeekly","isSuccessGetDaily","isSuccessGetWeekly","refInput","fancyInputRef","useLayoutEffect","pathname","useEffect","citiesErrorMessage","_","onSubmit","FancyTextField","TextField_default","title","defaultProps","withForm","withFormik","mapPropsToValues","validationSchema","Yup","shape","required","_ref","displayName","withRouter","SwitchForecastView","history","children","memoizedValue","useMemo","getValue","useDebugValue","FormControl_default","component","FormLabel_default","event","target","route","push","SwitchForecastRadioGroup","RadioGroup","Header_templateObject","HeaderWrap","Header_templateObject2","HeaderTop","Paper","_templateObject3","SearchButton","Button","_templateObject4","HeaderView","onFind","Search","type","color","disabled","SwitchForecast","Fragment","FormControlLabel_default","control","Radio_default","getDailyStart","getDailySuccess","payload","getDailyError","getWeeklyStart","getWeeklySuccess","getWeeklyError","setCities","initialState","data","activeCity","reducer","state","action","Object","objectSpread","res","stateData","cityRes","existCity","find","existCityIndex","findIndex","newCitiesData","map","c","cIndex","toConsumableArray","newExistCity","list","newCity","AppWrap","App_templateObject","React","createContext","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","catch","err","errRes","setCitiesFunc","styles","theme","mainTheme","CssBaseline_default","Provider","Header","react_router","exact","path","assign","Weekly_Loadable","Boolean","window","hostname","match","createBrowserHistory","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b2358c8.chunk.js","sourcesContent":["export const routesMap = {\r\n    daily: \"/\",\r\n    weekly: \"/weekly\"\r\n};\r\n\r\nexport const forecastMap = {\r\n    daily: \"daily\",\r\n    weekly: \"weekly\"\r\n};","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    // Here you can set or override all your variables and settings related to styling.\r\n    // https://material-ui.com/customization/themes/\r\n});\r\n","import Loadable from \"react-loadable\";\r\n\r\nexport default Loadable({\r\n    loader: () => import(`./index`),\r\n    loading: () => null\r\n});","import Loadable from \"react-loadable\";\r\n\r\nexport default Loadable({\r\n    loader: () => import(`./index`),\r\n    loading: () => null\r\n});","import axios from \"axios\";\r\n\r\nconst apiKey = `61bb39d2705b2bde0d7e22fb542adea6`;\r\n\r\nexport const getDaily = city => {\r\n    return axios.get(`/data/2.5/weather?q=${city}&APPID=${apiKey}`);\r\n};\r\n\r\nexport const getWeekly = city => {\r\n    return axios.get(`/data/2.5/forecast?q=${city}&APPID=${apiKey}`);\r\n};","import React, {forwardRef, useImperativeHandle, useRef} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\n\r\nfunction FancyInput(props, ref) {\r\n    const {\r\n        values,\r\n        handleChange,\r\n        handleBlur,\r\n        errors,\r\n        touched,\r\n        getHelperText,\r\n    } = props;\r\n    \r\n    const inputRef = useRef(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => {\r\n            if (inputRef.current) {\r\n                ReactDOM.findDOMNode(inputRef.current).getElementsByTagName(`input`)[0].focus();\r\n            }\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <TextField\r\n            name=\"city\"\r\n            id=\"city\"\r\n            variant=\"outlined\"\r\n            value={values.city}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            label={`Fancy example`}\r\n            error={errors.city && touched.city}\r\n            helperText={getHelperText(errors.city, touched.city)}\r\n            ref={inputRef}\r\n        />\r\n    )\r\n}\r\n\r\nexport default forwardRef(FancyInput);","import React, {useEffect, useContext, useRef, useLayoutEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\nimport {AppContext} from \"../../../App/index\";\r\nimport ReactDOM from \"react-dom\";\r\nimport FancyInput from \"./FancyTextField\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst SearchWrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    padding: 25px;\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n    display: flex;\r\n    align-items: flex-start;\r\n`;\r\n\r\nSearchView.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    cities: PropTypes.object,\r\n    value: PropTypes.string,\r\n    location: PropTypes.object,\r\n    render: PropTypes.func,\r\n};\r\n\r\nSearchView.defaultProps = {};\r\n\r\nfunction SearchView(props) {\r\n\r\n    const context = useContext(AppContext);\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        resetForm,\r\n        setSubmitting,\r\n        setFieldError,\r\n        location,\r\n        render\r\n    } = props;\r\n\r\n    const {\r\n        cities\r\n    } = context;\r\n\r\n    const {\r\n        isSendingGetDaily,\r\n        isSendingGetWeekly,\r\n\r\n        isSuccessGetDaily,\r\n        isSuccessGetWeekly\r\n    } = cities;\r\n\r\n    const refInput = useRef(null);\r\n    const fancyInputRef = useRef(null);\r\n\r\n    useLayoutEffect(() => {\r\n        if (fancyInputRef.current) {\r\n            fancyInputRef.current.focus();\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        if (refInput.current) {\r\n            ReactDOM.findDOMNode(refInput.current).getElementsByTagName(`input`)[0].focus();\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isSendingGetDaily && !isSendingGetWeekly) {\r\n            setSubmitting(false);\r\n        }\r\n\r\n        if ((!isSuccessGetDaily && !isSendingGetDaily)\r\n            || (!isSuccessGetWeekly && !isSendingGetWeekly)) {\r\n            const citiesErrorMessage = _.get(cities, \"error.message\");\r\n\r\n            if (citiesErrorMessage) {\r\n                setFieldError(\"city\", citiesErrorMessage)\r\n            }\r\n        }\r\n\r\n    }, [isSendingGetDaily, isSendingGetWeekly]);\r\n\r\n    useEffect(() => {\r\n        if (isSuccessGetDaily && isSuccessGetWeekly) {\r\n            resetForm();\r\n        }\r\n    }, [isSuccessGetDaily, isSuccessGetWeekly]);\r\n\r\n    const getHelperText = (error, touched) => {\r\n        switch (true) {\r\n            case error && touched:\r\n                return error;\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    function renderInput(type) {\r\n        if (type === `fancy`) {\r\n            return (\r\n                <FancyInput\r\n                    ref={fancyInputRef}\r\n                    values={values}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    handleChange={handleChange}\r\n                    handleBlur={handleBlur}\r\n                    getHelperText={getHelperText}\r\n                />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <TextField\r\n                name=\"city\"\r\n                id=\"city\"\r\n                variant=\"outlined\"\r\n                value={values.city}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                label={`City`}\r\n                error={errors.city && touched.city}\r\n                helperText={getHelperText(errors.city, touched.city)}\r\n                ref={refInput}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <SearchWrap>\r\n            <SearchForm\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {renderInput('')}\r\n\r\n                {render({\r\n                    isSubmitting,\r\n                    title: \"Search\"\r\n                })}\r\n            </SearchForm>\r\n        </SearchWrap>\r\n    );\r\n}\r\n\r\nconst withForm = withFormik({\r\n    mapPropsToValues: (props) => ({\r\n        city: props.value\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        city: Yup.string()\r\n            .required(`Required`),\r\n    }),\r\n    handleSubmit: (values, {props, setSubmitting}) => {\r\n        const {onSubmit} = props;\r\n        onSubmit({\r\n            city: values.city\r\n        });\r\n\r\n        setSubmitting(true);\r\n    },\r\n    displayName: 'findCity',\r\n});\r\n\r\nexport default withRouter(withForm(SearchView));","import React, {useMemo, useDebugValue} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {forecastMap, routesMap} from \"../../../utils/variables\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nSwitchForecastView.propTypes = {\r\n    location: PropTypes.object,\r\n    history: PropTypes.object,\r\n    children: PropTypes.node,\r\n};\r\n\r\nSwitchForecastView.defaultProps = {};\r\n\r\nfunction SwitchForecastView(props) {\r\n    const {\r\n        history,\r\n        location,\r\n        children,\r\n    } = props;\r\n\r\n    function getValue() {\r\n        switch (location.pathname) {\r\n            case routesMap.daily:\r\n                return forecastMap.daily;\r\n\r\n            case routesMap.weekly:\r\n                return forecastMap.weekly;\r\n\r\n            default:\r\n                return forecastMap.daily\r\n        }\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const value = event.target.value;\r\n        let route = routesMap.daily;\r\n\r\n        switch (value) {\r\n            case forecastMap.weekly:\r\n                route = routesMap.weekly;\r\n                break;\r\n\r\n            default:\r\n                route = routesMap.daily;\r\n        }\r\n        history.push(route);\r\n    }\r\n\r\n    const memoizedValue = useMemo(() => getValue(), [location.pathname]);\r\n\r\n    useDebugValue(memoizedValue === forecastMap.daily ? \"D\" : \"W\");\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">SwitchForecast</FormLabel>\r\n            {children({\r\n                memoizedValue,\r\n                handleChange\r\n            })}\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default withRouter(SwitchForecastView);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport SearchView from \"./Search\";\r\nimport ForecastView from \"./SwitchForecast\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\r\nimport {forecastMap} from \"../../utils/variables\";\r\nimport Radio from \"@material-ui/core/Radio/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup/RadioGroup\";\r\n\r\nconst SwitchForecastRadioGroup = styled(RadioGroup)`\r\n    && {\r\n      display: flex;\r\n      align-items: center;\r\n      flex-direction: row;\r\n    }\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst HeaderTop = styled(Paper)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 0;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst SearchButton = styled(Button)`\r\n    && {\r\n        padding: 0 15px;\r\n        text-transform: capitalize;\r\n        height: 55px;\r\n    }\r\n`;\r\n\r\nHeaderView.propTypes = {\r\n    onFind: PropTypes.func,\r\n    cities: PropTypes.object\r\n};\r\n\r\nHeaderView.defaultProps = {};\r\n\r\nfunction HeaderView(props) {\r\n    const {\r\n        onFind,\r\n        cities,\r\n    } = props;\r\n\r\n    return (\r\n        <HeaderWrap>\r\n            <HeaderTop>\r\n                <SearchView\r\n                    onSubmit={onFind}\r\n                    value={``}\r\n                    cities={cities}\r\n\r\n                    render={props => {\r\n                        const {\r\n                            isSubmitting,\r\n                            title\r\n                        } = props;\r\n\r\n                        return (\r\n                            <SearchButton\r\n                                type={`submit`}\r\n                                variant={\"contained\"}\r\n                                color={`primary`}\r\n                                disabled={isSubmitting}\r\n                            >\r\n                                {title}\r\n                            </SearchButton>\r\n                        )\r\n                    }}\r\n                />\r\n                <ForecastView>\r\n                    {props => {\r\n                        const {\r\n                            memoizedValue,\r\n                            handleChange,\r\n                        } = props;\r\n                        \r\n                        return (\r\n                            <>\r\n                                <SwitchForecastRadioGroup\r\n                                    name={`forecast`}\r\n                                    value={memoizedValue}\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <FormControlLabel\r\n                                        value={forecastMap.daily}\r\n                                        control={<Radio color={`primary`}/>}\r\n                                        label=\"Daily\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        value={forecastMap.weekly}\r\n                                        control={<Radio color={`primary`}/>}\r\n                                        label=\"Weekly\"\r\n                                    />\r\n                                </SwitchForecastRadioGroup>\r\n                            </>\r\n                        )\r\n                    }}\r\n                </ForecastView>\r\n            </HeaderTop>\r\n        </HeaderWrap>\r\n    );\r\n}\r\n\r\nexport default HeaderView;","import {\r\n    GET_DAILY_ERROR,\r\n    GET_DAILY_START,\r\n    GET_DAILY_SUCCESS,\r\n    GET_WEEKLY_START,\r\n    GET_WEEKLY_SUCCESS,\r\n    GET_WEEKLY_ERROR, SET_CITIES\r\n} from \"./constants\";\r\n\r\nexport const getDailyStart = () => {\r\n    return {\r\n        type: GET_DAILY_START\r\n    }\r\n};\r\n\r\nexport const getDailySuccess = payload => {\r\n    return {\r\n        type: GET_DAILY_SUCCESS,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const getDailyError = error => {\r\n    return {\r\n        type: GET_DAILY_ERROR,\r\n        error\r\n    }\r\n};\r\n\r\nexport const getWeeklyStart = () => {\r\n    return {\r\n        type: GET_WEEKLY_START\r\n    }\r\n};\r\n\r\nexport const getWeeklySuccess = payload => {\r\n    return {\r\n        type: GET_WEEKLY_SUCCESS,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const getWeeklyError = error => {\r\n    return {\r\n        type: GET_WEEKLY_ERROR,\r\n        error\r\n    }\r\n};\r\n\r\nexport const setCities = payload => {\r\n    return {\r\n        type: SET_CITIES,\r\n        payload\r\n    }\r\n};","export const GET_DAILY_START = \"GET_DAILY_START\";\r\nexport const GET_DAILY_SUCCESS = \"GET_DAILY_SUCCESS\";\r\nexport const GET_DAILY_ERROR = \"GET_DAILY_ERROR\";\r\nexport const GET_WEEKLY_START = \"GET_WEEKLY_START\";\r\nexport const GET_WEEKLY_SUCCESS = \"GET_WEEKLY_SUCCESS\";\r\nexport const GET_WEEKLY_ERROR = \"GET_WEEKLY_ERROR\";\r\nexport const SET_CITIES = \"SET_CITIES\";\r\n\r\n","import {\r\n    GET_DAILY_ERROR,\r\n    GET_DAILY_START,\r\n    GET_DAILY_SUCCESS,\r\n    GET_WEEKLY_ERROR,\r\n    GET_WEEKLY_START,\r\n    GET_WEEKLY_SUCCESS, SET_CITIES\r\n} from \"./constants\";\r\nimport _ from \"lodash\";\r\n\r\nexport const initialState = {\r\n    data: [],\r\n    activeCity: {},\r\n    isSendingGetDaily: false,\r\n    isSendingGetWeekly: false,\r\n    isSuccessGetDaily: true,\r\n    isSuccessGetWeekly: true,\r\n    error: null\r\n};\r\n\r\nfunction getDailySuccess(state, res) {\r\n    const stateData = _.get(state, \"data\", []);\r\n    const cityRes = _.get(res, \"data\", null);\r\n\r\n    const existCity = stateData.find(city => city.id === cityRes.id);\r\n    const existCityIndex = stateData.findIndex(city => city.id === cityRes.id);\r\n\r\n    if (existCity) {\r\n\r\n        const newCitiesData = stateData.map((c, cIndex) => {\r\n            if (cIndex === existCityIndex) {\r\n                return cityRes;\r\n            }\r\n\r\n            return c;\r\n        });\r\n\r\n        return {\r\n            ...state,\r\n            data: newCitiesData,\r\n            activeCity: cityRes,\r\n            isSendingGetDaily: false,\r\n            isSuccessGetDaily: true\r\n        }\r\n    } else {\r\n        return {\r\n            ...state,\r\n            data: [...stateData, cityRes],\r\n            activeCity: cityRes,\r\n            isSendingGetDaily: false,\r\n            isSuccessGetDaily: true\r\n        }\r\n    }\r\n}\r\n\r\nfunction getWeeklySuccess(state, res) {\r\n    const stateData = _.get(state, \"data\", []);\r\n    const cityRes = _.get(res, \"data\", null);\r\n    const city = _.get(cityRes, \"city\", {});\r\n\r\n    const existCity = stateData.find(c => c.id === city.id);\r\n    const existCityIndex = stateData.findIndex(c => c.id === city.id);\r\n\r\n    if (existCity) {\r\n\r\n        const newExistCity = {\r\n            ...existCity,\r\n            ...city,\r\n            list: cityRes.list,\r\n        };\r\n\r\n        const newCitiesData = stateData.map((c, cIndex) => {\r\n            if (cIndex === existCityIndex) {\r\n                return newExistCity\r\n            }\r\n\r\n            return c;\r\n        });\r\n\r\n        return {\r\n            ...state,\r\n            data: newCitiesData,\r\n            activeCity: newExistCity,\r\n            isSendingGetWeekly: false,\r\n            isSuccessGetWeekly: true\r\n        }\r\n    } else {\r\n\r\n        const newCity = {\r\n            ...city,\r\n            list: cityRes.list\r\n        };\r\n\r\n        return {\r\n            ...state,\r\n            data: [...stateData, newCity],\r\n            activeCity: newCity,\r\n            isSendingGetWeekly: false,\r\n            isSuccessGetWeekly: true\r\n        }\r\n    }\r\n}\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_DAILY_START:\r\n            return {\r\n                ...state,\r\n                isSendingGetDaily: true,\r\n                isSuccessGetDaily: false\r\n            };\r\n\r\n        case GET_DAILY_SUCCESS:\r\n            return getDailySuccess(state, action.payload);\r\n\r\n        case GET_DAILY_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                isSendingGetDaily: false,\r\n                isSuccessGetDaily: false\r\n            };\r\n\r\n        case GET_WEEKLY_START:\r\n            return {\r\n                ...state,\r\n                isSendingGetWeekly: true,\r\n                isSuccessGetWeekly: false\r\n            };\r\n\r\n        case GET_WEEKLY_SUCCESS:\r\n            return getWeeklySuccess(state, action.payload);\r\n\r\n        case GET_WEEKLY_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                isSendingGetWeekly: false,\r\n                isSuccessGetWeekly: false\r\n            };\r\n\r\n        case SET_CITIES:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, {useEffect, useReducer} from 'react';\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport {MuiThemeProvider} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport mainTheme from \"../themes/index\";\r\nimport {routesMap} from \"../utils/variables\";\r\nimport styled from \"styled-components\";\r\nimport DailyView from \"../containers/Daily/Loadable\";\r\nimport WeeklyView from \"../containers/Weekly/Loadable\";\r\nimport {getDaily, getWeekly} from \"../requests/index\";\r\nimport _ from \"lodash\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport HeaderView from \"../components/Header/index\";\r\nimport {\r\n    getDailyError,\r\n    getDailyStart,\r\n    getDailySuccess,\r\n    getWeeklyError,\r\n    getWeeklyStart,\r\n    getWeeklySuccess, setCities\r\n} from \"./actions\";\r\nimport reducer, {initialState} from \"./reducer\";\r\n\r\nconst AppWrap = styled.div`\r\n    \r\n`;\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nfunction App(props) {\r\n    const {\r\n        location\r\n    } = props;\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    \r\n    useEffect(() => {\r\n        const activeCity = _.get(state, \"activeCity\", {});\r\n\r\n        if (activeCity.name) {\r\n            onFind({\r\n                city: activeCity.name\r\n            })\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    function onFind({city}) {\r\n\r\n        if (location.pathname === routesMap.daily) {\r\n\r\n            dispatch(getDailyStart());\r\n\r\n            getDaily(city)\r\n                .then(res => {\r\n                    \r\n                    dispatch(getDailySuccess(res));\r\n\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    const errRes = _.get(err, \"response.data\", null);\r\n\r\n                    dispatch(getDailyError(errRes));\r\n                    \r\n                    throw err;\r\n                });\r\n        }\r\n\r\n        if (location.pathname === routesMap.weekly) {\r\n\r\n            dispatch(getWeeklyStart());\r\n\r\n            getWeekly(city)\r\n                .then(res => {\r\n                    \r\n                    dispatch(getWeeklySuccess(res));\r\n\r\n                    return res;\r\n                })\r\n                .catch(err => {\r\n                    \r\n                    \r\n                    const errRes = _.get(err, \"response.data\", null);\r\n                    dispatch(getWeeklyError(errRes));\r\n                    \r\n                    throw err;\r\n                });\r\n        }\r\n    }\r\n    \r\n    const setCitiesFunc = cities => {\r\n        dispatch(setCities(cities));\r\n    };\r\n\r\n    return (\r\n        <MuiThemeProvider theme={mainTheme}>\r\n            <CssBaseline/>\r\n            <AppWrap>\r\n                <AppContext.Provider\r\n                    value={{\r\n                        cities: state,\r\n                        onFind\r\n                    }}\r\n                >\r\n                    <HeaderView\r\n                        onFind={onFind}\r\n                        cities={state}\r\n                    />\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path={routesMap.daily}\r\n                            render={props => <DailyView\r\n                                {...props}\r\n                                cities={state}\r\n                                onFind={onFind}\r\n                                setCities={setCitiesFunc}\r\n                            />}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={routesMap.weekly}\r\n                            render={props => <WeeklyView\r\n                                {...props}\r\n                                cities={state}\r\n                                onFind={onFind}\r\n                                setCities={setCitiesFunc}\r\n                            />}\r\n                        />\r\n                    </Switch>\r\n                </AppContext.Provider>\r\n            </AppWrap>\r\n        </MuiThemeProvider>\r\n    );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Router} from \"react-router-dom\";\r\nimport {createBrowserHistory} from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n    <Router history={history}>\r\n        <App/>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}